{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kevin Tran\\\\Documents\\\\GitHub\\\\phishnet\\\\frontend\\\\src\\\\components\\\\EmailClassifier.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EmailClassifier() {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [result, setResult] = useState(null);\n  const [insights, setInsights] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Classify the email\n      const response = await axios.post(\"http://127.0.0.1:5000/api/classify\", {\n        email\n      });\n      setResult(response.data);\n\n      // Fetch insights from the backend\n      const insightsResponse = await axios.post(\"http://127.0.0.1:5000/api/insights\", {\n        email,\n        prediction: response.data.prediction\n      });\n      setInsights(insightsResponse.data.insights);\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: \"10\",\n        cols: \"50\",\n        placeholder: \"Paste your email body here...\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Classify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Prediction: \", result.prediction]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Confidence: \", result.confidence]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), insights && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Insights:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: insights\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(EmailClassifier, \"QrcOYBE/bLvWeYYWwQkDPrTYdCg=\");\n_c = EmailClassifier;\nexport default EmailClassifier;\nvar _c;\n$RefreshReg$(_c, \"EmailClassifier\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","EmailClassifier","_s","email","setEmail","result","setResult","insights","setInsights","handleSubmit","e","preventDefault","response","post","data","insightsResponse","prediction","error","console","children","onSubmit","rows","cols","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","type","className","confidence","_c","$RefreshReg$"],"sources":["C:/Users/Kevin Tran/Documents/GitHub/phishnet/frontend/src/components/EmailClassifier.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction EmailClassifier() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [result, setResult] = useState(null);\r\n  const [insights, setInsights] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      // Classify the email\r\n      const response = await axios.post(\"http://127.0.0.1:5000/api/classify\", { email });\r\n      setResult(response.data);\r\n\r\n      // Fetch insights from the backend\r\n      const insightsResponse = await axios.post(\"http://127.0.0.1:5000/api/insights\", {\r\n        email,\r\n        prediction: response.data.prediction,\r\n      });\r\n      setInsights(insightsResponse.data.insights);\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <textarea\r\n          rows=\"10\"\r\n          cols=\"50\"\r\n          placeholder=\"Paste your email body here...\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        ></textarea>\r\n        <br />\r\n        <button type=\"submit\">Classify</button>\r\n      </form>\r\n      {result && (\r\n        <div className=\"result-box\">\r\n          <h2>Prediction: {result.prediction}</h2>\r\n          <p>Confidence: {result.confidence}</p>\r\n          {insights && (\r\n            <div>\r\n              <h3>Insights:</h3>\r\n              <p>{insights}</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmailClassifier;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}